#!/bin/sh
# $FreeBSD$

: ${DIALOG_OK=0}
: ${DIALOG_CANCEL=1}
: ${DIALOG_HELP=2}
: ${DIALOG_EXTRA=3}
: ${DIALOG_ITEM_HELP=4}
: ${DIALOG_ESC=255}

if ! mdconfig -l | grep -q md3; then
	mdconfig -a -u 3 -s 8m
	newfs /dev/md3
	mount /dev/md3 /mnt
	tar -C /etc -cf - . | tar -C /mnt -xf -
	sync; sync; sync
	umount /mnt
	mount /dev/md3 /etc
fi

# Mount /dev/ufs/pfSense_Install on factory to prevent USB stick disk used
# to boot to be shown as an option to install
if [ -e /dev/ufs/pfSense_Install -a ! -d /tmp/usb_install_media ]; then
	mkdir -p /tmp/usb_install_media
	mount /dev/ufs/pfSense_Install /tmp/usb_install_media
fi

if [ -f /root/factory-pre.sh ]; then
	sh -x /root/factory-pre.sh >/tmp/factory-pre.debug 2>&1
	unset CE_message
else
	CE_message=1
fi

MACHINE=`uname -m`

# resolv.conf from DHCP ends up in here, so make sure the directory exists
mkdir /tmp/bsdinstall_etc

kbdcontrol -d >/dev/null 2>&1
if [ $? -eq 0 ]; then
	# Syscons: use xterm, start interesting things on other VTYs
	TERM=xterm

	# Don't send ESC on function-key 62/63 (left/right command key)
	kbdcontrol -f 62 '' > /dev/null 2>&1
	kbdcontrol -f 63 '' > /dev/null 2>&1

	if [ -z "$EXTERNAL_VTY_STARTED" ]; then
		# Init will clean these processes up if/when the system
		# goes multiuser
		touch /tmp/bsdinstall_log
		tail -f /tmp/bsdinstall_log > /dev/ttyv2 &
		/usr/libexec/getty autologin ttyv3 &
		EXTERNAL_VTY_STARTED=1
	fi
else
	# Serial or other console
	echo
	echo "Welcome to pfSense!"
	echo
	echo "Please choose the appropriate terminal type for your system."
	echo "Common console types are:"
	echo "   ansi     Standard ANSI terminal"
	echo "   vt100    VT100 or compatible terminal"
	echo "   xterm    xterm terminal emulator (or compatible)"
	echo "   cons25w  cons25w terminal"
	echo
	echo -n "Console type [vt100]: "
	read TERM
	TERM=${TERM:-vt100}
fi
export TERM

if [ -f /etc/installerconfig ]; then
	if bsdinstall script /etc/installerconfig; then
		dialog --backtitle "pfSense Installer" --title "Complete" --no-cancel --ok-label "Reboot" --pause "Installation of pfSense complete! Rebooting in 10 seconds" 10 30 10
		reboot
	else
		dialog --backtitle "pfSense Installer" --title "Error" --textbox /tmp/bsdinstall_log 0 0
	fi
	exit 
fi

msg=$(cat <<EOD
\ZbCopyright and Trademark Notices.\ZB

Copyright(c) 2004-2016. Electric Sheep Fencing, LLC ("ESF").
All Rights Reserved.

Copyright(c) 2014-2021. Rubicon Communications, LLC d/b/a Netgate ("Netgate").
All Rights Reserved.

All logos, text, and content of ESF and/or Netgate, including underlying
HTML code, designs, and graphics used and/or depicted herein are
protected under United States and international copyright and trademark
laws and treaties, and may not be used or reproduced without the prior
express written permission of ESF and/or Netgate.

"pfSense" is a registered trademark of ESF, exclusively licensed to
Netgate, and may not be used without the prior express written
permission of ESF and/or Netgate. All other trademarks shown herein are
owned by the respective companies or persons indicated.

pfSense(R) software is open source and distributed under the Apache 2.0
license.  However, no commercial distribution of ESF and/or Netgate
software is allowed without the prior written consent of ESF and/or
Netgate.

ESF and/or Netgate make no warranty of any kind, including but not
limited to the implied warranties of merchantability and fitness for a
particular purpose.  ESF and/or Netgate shall not be liable for errors
contained herein or for any direct, indirect, special, incidental or
consequential damages in connection with the furnishing, performance, or
use of any software, information, or material.

\ZbRestricted Rights Legend.\ZB

No part of ESF and/or Netgate's information or materials may be
published, distributed, reproduced, publicly displayed, used to create
derivative works, or translated to another language, without the prior
written consent of ESF and/or Netgate. The information contained herein
is subject to change without notice.

Use, duplication or disclosure by the U.S. Government may be subject to
restrictions as set forth in subparagraph (c) (1) (ii) of the Rights in
Technical Data and Computer Software clause at DFARS 252.227-7013 for
DOD agencies, and subparagraphs (c) (1) and (c) (2) of the Commercial
Computer Software Restricted Rights clause at FAR 52.227-19 for other
agencies.

\ZbRegulatory/Export Compliance.\ZB

The export and re-export of software is controlled for export purposes
by the U.S. Government. By accepting this software and/or documentation,
Licensee agrees to comply with all U.S. and foreign export laws and
regulations as they relate to software and related documentation.
Licensee will not export or re-export outside the United States software
or documentation, whether directly or indirectly, to any Prohibited
Party and will not cause, approve or otherwise intentionally facilitate
others in so doing. A Prohibited Party includes: a party in a U.S.
embargoed country or country the United States has named as a supporter
of international terrorism; a party involved in proliferation; a party
identified by the U.S. Government as a Denied Party; a party named on
the U.S. Government's Enemies List; a party prohibited from
participation in export or re-export transactions by a U.S. Government
General Order; a party listed by the U.S. Government's Office of Foreign
Assets Control as ineligible to participate in transactions subject to
U.S. jurisdiction; or any party that Licensee knows or has reason to
know has violated or plans to violate U.S. or foreign export laws or
regulations. Licensee shall ensure that each of its software users
complies with U.S. and foreign export laws and regulations as they
relate to software and related documentation.
EOD
)

if [ ! -f /tmp/buildroom ]; then
	exec 3>&1
	dialog --backtitle "pfSense Installer" \
		--title "Copyright and distribution notice" \
		--ok-label "Accept" \
		--scrollbar --colors \
		--msgbox "${msg}" 0 0 2>&1 1>&3
	exec 3>&-
fi

IOPTS="\
\"Install\" \"Install pfSense\" \
\"Rescue Shell\" \"Launch a shell for rescue operations\""

if [ -x /root/recover_configxml.sh ] ; then
	IOPTS="${IOPTS} \"Recover config.xml\" \"Recover config.xml from a previous install\""
fi

exec 3>&1
IMODE=`echo ${IOPTS} | xargs dialog --backtitle "pfSense Installer" \
	--title "Welcome" \
	--menu "Welcome to pfSense!" \
	0 0 0 2>&1 1>&3` || exit 1
exec 3>&-

case "$IMODE" in
"Install")	# Install
	# If not netbooting, have the installer configure the network
	dlv=`/sbin/sysctl -n vfs.nfs.diskless_valid 2> /dev/null`
	if [ ${dlv:=0} -eq 0 -a ! -f /etc/diskless ]; then
		BSDINSTALL_CONFIGCURRENT=yes; export BSDINSTALL_CONFIGCURRENT
	fi

	trap true SIGINT	# Ignore cntrl-C here
	env ZFSBOOT_POOL_NAME=pfSense bsdinstall
	if [ $? -eq 0 ]; then
		dialog --backtitle "pfSense Installer" --title "Complete" --yes-label "Reboot" --no-label "Shell" --yesno "Installation of pfSense complete! Would you like to reboot into the installed system now?" 0 0 && reboot
		clear
		echo "When finished, type 'exit' to reboot."
		/bin/sh
		reboot
	else
		. /etc/rc.local
	fi
	;;
"Rescue Shell")	# Rescue Shell
	clear
	echo "When finished, type 'exit' to return to the installer."
	/bin/sh
	. /etc/rc.local
	;;
"Recover config.xml") # Recover config.xml from a target drive
	/root/recover_configxml.sh
	. /etc/rc.local
	;;
esac

